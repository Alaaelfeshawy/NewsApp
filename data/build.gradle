plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 32

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    sourceSets {
        main {
            assets {
                srcDirs 'src\\main\\assets'
            }
            res {
                srcDirs 'src\\main\\res'
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation(project(":domain"))

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

    def life_cycle_version = "2.4.1"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${life_cycle_version}"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${life_cycle_version}"

    // Room
    def room_version = "2.4.2"
    implementation "androidx.room:room-runtime:${room_version}"
    kapt"androidx.room:room-compiler:${room_version}"
    implementation"androidx.room:room-rxjava2:${room_version}"

    //hilt
     def hilt_version = "2.42"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    implementation "javax.inject:javax.inject:1"

    // Retrofit
    def retrofit_version ="2.9.0"
    implementation  "com.squareup.retrofit2:retrofit:${retrofit_version}"
    implementation "com.squareup.retrofit2:converter-moshi:${retrofit_version}"
//    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    //moshi
    def moshi_kotlin_version ="1.12.0"
    implementation "com.squareup.moshi:moshi-kotlin:${moshi_kotlin_version}"
    //okhttp
    def okhttp_version = "4.9.3"
    implementation "com.squareup.okhttp3:okhttp:${okhttp_version}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp_version}"

    //mapping
    def map_struct_version = "1.5.0.RC1"
    implementation "org.mapstruct:mapstruct:${map_struct_version}"
    kapt "org.mapstruct:mapstruct-processor:${map_struct_version}"

    // Test
    def junitVersion = "4.13.2"
    testImplementation "junit:junit:${junitVersion}"
    def archTestCoreVersion = "2.1.0"
    testImplementation  "androidx.arch.core:core-testing:${archTestCoreVersion}"
    def hamcrestVersion = "1.3"
    testImplementation "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    def mockitoVersionCore = "2.22.0"
    testImplementation "org.mockito:mockito-core:${mockitoVersionCore}"
    def kotlinTestVersion = "1.3.70"
    testImplementation  "org.jetbrains.kotlin:kotlin-test-junit:${kotlinTestVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.3"
    def robolectricVersion = "4.4"
    testImplementation "org.robolectric:robolectric:${robolectricVersion}"


}